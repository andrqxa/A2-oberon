MODULE ZipFS;
	IMPORT Modules, Streams, Files, Unzip, Dates;
CONST 
TYPE 
	FileSystem = OBJECT {EXCLUSIVE} (Files.FileSystem)
	VAR 
		zip: Unzip.ZipFile; 

		PROCEDURE ^  & Init*(zip: Unzip.ZipFile); 
		PROCEDURE ^ {OVERRIDE} Old0*(CONST name: ARRAY OF CHAR): Files.File; 
		PROCEDURE ^ {OVERRIDE} Enumerate0*(CONST mask: ARRAY OF CHAR; flags: SET; enum: Files.Enumerator); 
		PROCEDURE ^ {OVERRIDE} FileKey*(CONST name: ARRAY OF CHAR): SIGNED32; 
		PROCEDURE ^ {OVERRIDE} Finalize*; 
	END FileSystem; 

	File = OBJECT (Files.File)
	VAR 
		F: Files.File; 
		E: Unzip.Entry; 

		PROCEDURE ^ {OVERRIDE} Set*(VAR r: Files.Rider; pos: Files.Position); 
		PROCEDURE ^ {OVERRIDE} Pos*(VAR r: Files.Rider): Files.Position; 
		PROCEDURE ^ {OVERRIDE} Read*(VAR r: Files.Rider; VAR x: CHAR); 
		PROCEDURE ^ {OVERRIDE} ReadBytes*(VAR r: Files.Rider; VAR x: ARRAY OF CHAR; ofs, len: SIZE); 
		PROCEDURE ^ {OVERRIDE} Length*(): Files.Size; 
		PROCEDURE ^ {OVERRIDE} GetDate*(VAR t, d: SIGNED32); 
		PROCEDURE ^ {OVERRIDE} GetName*(VAR name: ARRAY OF CHAR); 
		PROCEDURE ^ {OVERRIDE} Update*; 
	END File; 
VAR 
	localFS: Files.FileSystem; 

	PROCEDURE ^ Match(pat, name: ARRAY OF CHAR): BOOLEAN; 
	PROCEDURE ^ NewFS*(context: Files.Parameters); 
	PROCEDURE ^ Finalization; 
	PROCEDURE ^ Init; 
BEGIN
END ZipFS.
