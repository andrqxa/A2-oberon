MODULE WMPerfMon;
	IMPORT KernelLog, Modules, Plugins, Strings, Network, WMRectangles, WMGraphics, WMMessages, WMWindowManager, WMRestorable, WMComponents, WMStandardComponents, WMTabComponents, WMProcessInfo, WMPerfMonPlugins, WMPerfMonComponents, WMPerfMonTabAlerts, WMPerfMonTabSystem, WMPerfMonPluginMemory, WMPerfMonPluginCpu, WMPerfMonPluginNetwork;
CONST 
	DefaultWidth = 750; 
	DefaultHeight = 400; 
	MinWidth = 150; 
	MinHeight = 150; 
	NbrOfTabs = 6; 
TYPE 
	CpuMemoryComponent = OBJECT {EXCLUSIVE} (WMPerfMonComponents.PluginContainer)
	VAR 
		cpu: POINTER TO ARRAY OF WMPerfMonPluginCpu.CpuLoad; 
		ml: WMPerfMonPluginMemory.MemoryLoad; 

		PROCEDURE ^ {OVERRIDE} LocatePlugins*(): BOOLEAN; 
		PROCEDURE ^ {OVERRIDE} Finalize*; 
	END CpuMemoryComponent; 

	NetworkComponent = OBJECT {EXCLUSIVE} (WMPerfMonComponents.PluginContainer)
	VAR 
		netspeed: POINTER TO ARRAY OF WMPerfMonPluginNetwork.NetworkSpeed; 

		PROCEDURE ^ {OVERRIDE} LocatePlugins*(): BOOLEAN; 
		PROCEDURE ^ {OVERRIDE} Finalize*; 
	END NetworkComponent; 

	KillerMsg = OBJECT 
	END KillerMsg; 

	Window = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		tabs: WMTabComponents.Tabs; 
		tabList: ARRAY NbrOfTabs OF WMTabComponents.Tab; 
		tabPanels: ARRAY NbrOfTabs OF WMComponents.VisualComponent; 
		tabPanel: WMStandardComponents.Panel; 
		curTabPanel: WMComponents.VisualComponent; 
		curTab: WMTabComponents.Tab; 
		cpuMemory: CpuMemoryComponent; 
		network: NetworkComponent; 
		selection: WMPerfMonComponents.SelectionComponent; 
		width, height: SIZE; 

		PROCEDURE ^ {OVERRIDE} Resized*(width, height: SIZE); 
		PROCEDURE ^ CreateForm(): WMComponents.VisualComponent; 
		PROCEDURE ^ TabSelected(sender, data: ANY ); 
		PROCEDURE ^ SelectTabByName(CONST name: ARRAY OF CHAR); 
		PROCEDURE ^ {OVERRIDE} Handle*(VAR x: WMMessages.Message); 
		PROCEDURE ^ {OVERRIDE} Close*; 
		PROCEDURE ^  & New*(c: WMRestorable.Context); 
	END Window; 
VAR 
	nofWindows: SIGNED32; 

	PROCEDURE ^ Open*; 
	PROCEDURE ^ Restore*(context: WMRestorable.Context); 
	PROCEDURE ^ IncCount; 
	PROCEDURE ^ DecCount; 
	PROCEDURE ^ Cleanup; 
BEGIN
END WMPerfMon.
